version: 2.1

executors:
  cpp-executor:
    docker:
      - image: ubuntu:latest
    environment:
      CC: clang
      CXX: clang++
      PATH: "/usr/local/bin:/usr/bin:/bin"
      DEBIAN_FRONTEND: noninteractive  # Ensures non-interactive installation

jobs:
  build_and_test:
    executor: cpp-executor
    steps:
      - checkout
      - run:
          name: Fix CA Certificates
          command: |
            apt update && apt install -y --no-install-recommends ca-certificates
            if command -v update-ca-certificates > /dev/null; then
              update-ca-certificates
            fi
      - run:
          name: Set timezone to UTC
          command: |
            ln -fs /usr/share/zoneinfo/UTC /etc/localtime
            echo "tzdata tzdata/Areas select Etc" | debconf-set-selections
            echo "tzdata tzdata/Zones/Etc select UTC" | debconf-set-selections
      - run:
          name: Install dependencies
          command: |
            apt update && apt install -y --no-install-recommends \
              build-essential \
              libtool \
              autoconf \
              clang \
              clang-tidy \
              clang-format \
              gcovr \
              lcov \
              ninja-build \
              curl \
              zip \
              unzip \
              tar \
              git \
              python3 \
              pkg-config \
              tzdata \
              wget
            CMAKE_VERSION=3.30.7
            CMAKE_TAR=cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
            wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/${CMAKE_TAR}
            tar -xzvf ${CMAKE_TAR}
            sudo cp -r cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr/local/
            cmake_version=$(cmake --version | head -n 1 | sed 's/[^0-9]*\([0-9]*\)\.\([0-9]*\)\..*/\1\.\2/')
            if [[ $(echo "$cmake_version >= 3.30" | bc -l) -eq 1 ]]; then
              echo "CMake version $cmake_version installed successfully!"
            else
              echo "CMake version is $cmake_version, BUT clang++ needs cmake3.30+."
              exit 1
            fi

      - run:
          name: Verify tar installation
          command: |
            tar --version
      - run:
          name: Install vcpkg with debug logs
          command: |
            set -x  # Enable debugging
            git clone https://github.com/microsoft/vcpkg.git
            ls -lah vcpkg  # Ensure vcpkg directory exists
            cat vcpkg/bootstrap-vcpkg.sh | head -n 40  # Show first 40 lines of the script for inspection
            ./vcpkg/bootstrap-vcpkg.sh || (echo "vcpkg bootstrap failed!" && exit 1)
      - run:
          name: Install project dependencies
          command: |
            ./vcpkg/vcpkg install gtest
      - run:
          name: Configure CMake
          command: |
            cmake -B build -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_CXX_COMPILER=clang++
      - run:
          name: Build
          command: cmake --build build
      - run:
          name: Run tests
          command: ctest --test-dir build --output-on-failure
      - run:
          name: Run Clang-Format
          command: find . -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror
      - run:
          name: Run Clang-Tidy
          command: clang-tidy -p build -checks='*' src/*.cpp
      - run:
          name: Generate Coverage
          command: |
            gcovr -r . --html --html-details -o coverage.html
      - store_artifacts:
          path: coverage.html
          destination: coverage


workflows:
  version: 2
  cpp_pipeline:
    jobs:
      - build_and_test
